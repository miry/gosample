// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chat.proto

package chat

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ConnectRequest struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectRequest) Reset()         { *m = ConnectRequest{} }
func (m *ConnectRequest) String() string { return proto.CompactTextString(m) }
func (*ConnectRequest) ProtoMessage()    {}
func (*ConnectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_e083a75032d91ab7, []int{0}
}
func (m *ConnectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectRequest.Unmarshal(m, b)
}
func (m *ConnectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectRequest.Marshal(b, m, deterministic)
}
func (dst *ConnectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectRequest.Merge(dst, src)
}
func (m *ConnectRequest) XXX_Size() int {
	return xxx_messageInfo_ConnectRequest.Size(m)
}
func (m *ConnectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectRequest proto.InternalMessageInfo

func (m *ConnectRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type Confirm struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Error                bool     `protobuf:"varint,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Confirm) Reset()         { *m = Confirm{} }
func (m *Confirm) String() string { return proto.CompactTextString(m) }
func (*Confirm) ProtoMessage()    {}
func (*Confirm) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_e083a75032d91ab7, []int{1}
}
func (m *Confirm) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Confirm.Unmarshal(m, b)
}
func (m *Confirm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Confirm.Marshal(b, m, deterministic)
}
func (dst *Confirm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Confirm.Merge(dst, src)
}
func (m *Confirm) XXX_Size() int {
	return xxx_messageInfo_Confirm.Size(m)
}
func (m *Confirm) XXX_DiscardUnknown() {
	xxx_messageInfo_Confirm.DiscardUnknown(m)
}

var xxx_messageInfo_Confirm proto.InternalMessageInfo

func (m *Confirm) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Confirm) GetError() bool {
	if m != nil {
		return m.Error
	}
	return false
}

type Text struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Text) Reset()         { *m = Text{} }
func (m *Text) String() string { return proto.CompactTextString(m) }
func (*Text) ProtoMessage()    {}
func (*Text) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_e083a75032d91ab7, []int{2}
}
func (m *Text) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Text.Unmarshal(m, b)
}
func (m *Text) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Text.Marshal(b, m, deterministic)
}
func (dst *Text) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Text.Merge(dst, src)
}
func (m *Text) XXX_Size() int {
	return xxx_messageInfo_Text.Size(m)
}
func (m *Text) XXX_DiscardUnknown() {
	xxx_messageInfo_Text.DiscardUnknown(m)
}

var xxx_messageInfo_Text proto.InternalMessageInfo

func (m *Text) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Text) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_e083a75032d91ab7, []int{3}
}
func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (dst *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(dst, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type User struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_e083a75032d91ab7, []int{4}
}
func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (dst *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(dst, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type UserList struct {
	Users                []*User  `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserList) Reset()         { *m = UserList{} }
func (m *UserList) String() string { return proto.CompactTextString(m) }
func (*UserList) ProtoMessage()    {}
func (*UserList) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_e083a75032d91ab7, []int{5}
}
func (m *UserList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserList.Unmarshal(m, b)
}
func (m *UserList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserList.Marshal(b, m, deterministic)
}
func (dst *UserList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserList.Merge(dst, src)
}
func (m *UserList) XXX_Size() int {
	return xxx_messageInfo_UserList.Size(m)
}
func (m *UserList) XXX_DiscardUnknown() {
	xxx_messageInfo_UserList.DiscardUnknown(m)
}

var xxx_messageInfo_UserList proto.InternalMessageInfo

func (m *UserList) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

func init() {
	proto.RegisterType((*ConnectRequest)(nil), "chat.ConnectRequest")
	proto.RegisterType((*Confirm)(nil), "chat.Confirm")
	proto.RegisterType((*Text)(nil), "chat.Text")
	proto.RegisterType((*Empty)(nil), "chat.Empty")
	proto.RegisterType((*User)(nil), "chat.User")
	proto.RegisterType((*UserList)(nil), "chat.UserList")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ChatClient is the client API for Chat service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatClient interface {
	Say(ctx context.Context, in *Text, opts ...grpc.CallOption) (*Confirm, error)
	Version(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Confirm, error)
	Users(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*UserList, error)
	Channel(ctx context.Context, in *ConnectRequest, opts ...grpc.CallOption) (Chat_ChannelClient, error)
}

type chatClient struct {
	cc *grpc.ClientConn
}

func NewChatClient(cc *grpc.ClientConn) ChatClient {
	return &chatClient{cc}
}

func (c *chatClient) Say(ctx context.Context, in *Text, opts ...grpc.CallOption) (*Confirm, error) {
	out := new(Confirm)
	err := c.cc.Invoke(ctx, "/chat.Chat/Say", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) Version(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Confirm, error) {
	out := new(Confirm)
	err := c.cc.Invoke(ctx, "/chat.Chat/Version", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) Users(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*UserList, error) {
	out := new(UserList)
	err := c.cc.Invoke(ctx, "/chat.Chat/Users", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) Channel(ctx context.Context, in *ConnectRequest, opts ...grpc.CallOption) (Chat_ChannelClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Chat_serviceDesc.Streams[0], "/chat.Chat/Channel", opts...)
	if err != nil {
		return nil, err
	}
	x := &chatChannelClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Chat_ChannelClient interface {
	Recv() (*Text, error)
	grpc.ClientStream
}

type chatChannelClient struct {
	grpc.ClientStream
}

func (x *chatChannelClient) Recv() (*Text, error) {
	m := new(Text)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ChatServer is the server API for Chat service.
type ChatServer interface {
	Say(context.Context, *Text) (*Confirm, error)
	Version(context.Context, *Empty) (*Confirm, error)
	Users(context.Context, *Empty) (*UserList, error)
	Channel(*ConnectRequest, Chat_ChannelServer) error
}

func RegisterChatServer(s *grpc.Server, srv ChatServer) {
	s.RegisterService(&_Chat_serviceDesc, srv)
}

func _Chat_Say_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Text)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).Say(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.Chat/Say",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).Say(ctx, req.(*Text))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_Version_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).Version(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.Chat/Version",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).Version(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_Users_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).Users(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.Chat/Users",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).Users(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_Channel_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ConnectRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ChatServer).Channel(m, &chatChannelServer{stream})
}

type Chat_ChannelServer interface {
	Send(*Text) error
	grpc.ServerStream
}

type chatChannelServer struct {
	grpc.ServerStream
}

func (x *chatChannelServer) Send(m *Text) error {
	return x.ServerStream.SendMsg(m)
}

var _Chat_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chat.Chat",
	HandlerType: (*ChatServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Say",
			Handler:    _Chat_Say_Handler,
		},
		{
			MethodName: "Version",
			Handler:    _Chat_Version_Handler,
		},
		{
			MethodName: "Users",
			Handler:    _Chat_Users_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Channel",
			Handler:       _Chat_Channel_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "chat.proto",
}

func init() { proto.RegisterFile("chat.proto", fileDescriptor_chat_e083a75032d91ab7) }

var fileDescriptor_chat_e083a75032d91ab7 = []byte{
	// 274 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0x4f, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0xb3, 0x6d, 0x62, 0xe2, 0x14, 0x7b, 0x18, 0x7a, 0x08, 0x39, 0x85, 0x39, 0x68, 0x0e,
	0xa5, 0x4a, 0x3d, 0x09, 0xde, 0x82, 0x37, 0x4f, 0xf1, 0xcf, 0x7d, 0x2d, 0xa3, 0x09, 0x98, 0xdd,
	0xba, 0xbb, 0x05, 0xfb, 0x9d, 0xfc, 0x90, 0xb2, 0x49, 0x5b, 0x53, 0x84, 0xde, 0xe6, 0xf1, 0x1e,
	0xbf, 0x79, 0xc3, 0x00, 0xac, 0x6a, 0xe9, 0x16, 0x6b, 0xa3, 0x9d, 0xc6, 0xd0, 0xcf, 0x34, 0x87,
	0x69, 0xa9, 0x95, 0xe2, 0x95, 0xab, 0xf8, 0x6b, 0xc3, 0xd6, 0x61, 0x06, 0xc9, 0xc6, 0xb2, 0x51,
	0xb2, 0xe5, 0x54, 0xe4, 0xa2, 0x38, 0xaf, 0x0e, 0x9a, 0xee, 0x20, 0x2e, 0xb5, 0x7a, 0x6f, 0x4c,
	0x8b, 0x29, 0xc4, 0x2d, 0x5b, 0x2b, 0x3f, 0xf6, 0xa9, 0xbd, 0xc4, 0x19, 0x44, 0x6c, 0x8c, 0x36,
	0xe9, 0x28, 0x17, 0x45, 0x52, 0xf5, 0x82, 0xee, 0x21, 0x7c, 0xe6, 0xef, 0x93, 0xf8, 0x21, 0x73,
	0x74, 0xc4, 0xa4, 0x18, 0xa2, 0x87, 0x76, 0xed, 0xb6, 0x94, 0x41, 0xf8, 0x62, 0xd9, 0x20, 0x42,
	0x38, 0x40, 0x74, 0x33, 0xcd, 0x21, 0xf1, 0xde, 0x63, 0x63, 0x1d, 0xe6, 0x10, 0x79, 0xac, 0x4d,
	0x45, 0x3e, 0x2e, 0x26, 0x4b, 0x58, 0x74, 0x97, 0x7b, 0xbb, 0xea, 0x8d, 0xe5, 0x8f, 0x80, 0xb0,
	0xac, 0xa5, 0x43, 0x82, 0xf1, 0x93, 0xdc, 0xe2, 0x2e, 0xe2, 0x4b, 0x66, 0x17, 0xfd, 0xbc, 0xbb,
	0x95, 0x02, 0xbc, 0x82, 0xf8, 0x95, 0x8d, 0x6d, 0xb4, 0xc2, 0x49, 0xef, 0x75, 0x75, 0xfe, 0x07,
	0x2f, 0x21, 0xf2, 0x4b, 0xec, 0x71, 0x6c, 0xfa, 0xb7, 0xde, 0xb7, 0xa3, 0x00, 0xaf, 0x21, 0x2e,
	0x6b, 0xa9, 0x14, 0x7f, 0xe2, 0xec, 0xc0, 0x18, 0xbc, 0x21, 0x1b, 0xd4, 0xa1, 0xe0, 0x46, 0xbc,
	0x9d, 0x75, 0x5f, 0xbb, 0xfd, 0x0d, 0x00, 0x00, 0xff, 0xff, 0xa2, 0xdb, 0x71, 0x3a, 0xc3, 0x01,
	0x00, 0x00,
}
